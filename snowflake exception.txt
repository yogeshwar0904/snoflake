/*
  Custome Exception number between -20000 to -20999. Default exception number is -20000.
  Syntax = my_exception EXCEPTION (-20002, 'Raised MY_EXCEPTION.');
  variable SQLCODE => It define the Exception Number.(return code)
  Variable SQLERRM => It store the user define exception(return what type of exception).
  variable SQLSTATE => It return the response from DB(Warning'W', Success's', Nodata'N', Exception'X')[return state(complie error, numeric error)].
*/
-- link https://thinketl.com/exceptions-in-snowflake-stored-procedures/

/*
   Raising an exception.
 */
CREATE OR REPLACE PROCEDURE MY_DATABASE.ORDER_BASE.sp_raise_exception(var number)
RETURNS VARCHAR
LANGUAGE SQL
AS
$$
DECLARE
  my_sp_exception1 EXCEPTION (-20001, 'Raised user defined exception MY_SP_EXCEPTION1.');
  my_sp_exception2 EXCEPTION (-20002, 'Raised user defined exception MY_SP_EXCEPTION2.');
BEGIN
  IF (var=0) THEN
    RAISE my_sp_exception1;
  ELSEIF (var=1) THEN
    RAISE my_sp_exception2;
  END IF;
  RETURN var;
EXCEPTION
 WHEN my_sp_exception1 THEN
    RETURN SQLSTATE||':'||SQLCODE||':'||SQLERRM;
 WHEN my_sp_exception2 THEN
    RETURN SQLSTATE||':'||SQLCODE||':'||SQLERRM;
END;
$$
;

CALL MY_DATABASE.ORDER_BASE.sp_raise_exception(2);

/* 
  Catching an Exception.
    variable SQLCODE => It return code
    Variable SQLERRM => return what type of exception
    variable SQLSTATE => return state(complie error, numeric error).
    STATEMENT_ERROR => complie error
    EXPRESSION_ERROR => type error
    OTHER => unexcepted error
*/
CREATE OR REPLACE PROCEDURE MY_DATABASE.ORDER_BASE.build_other_exception()
RETURNS VARCHAR
LANGUAGE SQL
AS
$$
DECLARE
  var1 NUMBER;
BEGIN
  var1 := 1/0;
  RETURN var1;
EXCEPTION
  WHEN OTHER THEN
    RETURN 'OTHER_ERROR:'||SQLSTATE||':'||SQLCODE||':'||SQLERRM;
           --  OTHER_ERROR:22012:100051:Division by zero
END;
$$;

call MY_DATABASE.ORDER_BASE.build_other_exception();

